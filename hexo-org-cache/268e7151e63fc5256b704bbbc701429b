{"md5":"d2deec3870c6029a9b396dd5ae4a5924","content":"\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 15</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n</div><div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\"><span class=\"section-number-3\">1.1</span> Android RecyclerView</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n</div><div id=\"outline-container-sec-1-1-1\" class=\"outline-4\">\n<h4 id=\"sec-1-1-1\"><span class=\"section-number-4\">1.1.1</span> Add Header for RecyclerView</h4>\n<div class=\"outline-text-4\" id=\"text-1-1-1\">\n<p>\n   继承RecyclerView.Adapter&lt;RecyclerView.ViewHolder&gt; 自定义一个\nProvidentFundDetailAdater.onCreateviewholder()创建新的RecyclerView.ViewHolder 和初始化一些RecyclerView使用的private filed。\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"annotation\">@Override</span> <span class=\"keyword\">public</span> RecyclerView.<span class=\"function\">ViewHolder <span class=\"title\">onCreateViewHolder</span><span class=\"params\">(ViewGroup parent,</span><br><span class=\"line\"><span class=\"keyword\">int</span> viewType)</span> </span>{</span><br><span class=\"line\"> View v;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (viewType == HEADER_VIEW) {</span><br><span class=\"line\">     v = LayoutInflater.from(parent.getContext())</span><br><span class=\"line\">\t .inflate(R.layout.header_provident, parent, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">     HeaderFooterViewHolder vh = <span class=\"keyword\">new</span> HeaderFooterViewHolder(v);</span><br><span class=\"line\">     <span class=\"keyword\">return</span> vh;</span><br><span class=\"line\">   }</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (viewType == FOOTER_VIEW) {</span><br><span class=\"line\"></span><br><span class=\"line\">   }</span><br><span class=\"line\"></span><br><span class=\"line\">   v = LayoutInflater.from(parent.getContext()).</span><br><span class=\"line\">\t  inflate(R.layout.normal_provident, parent, <span class=\"keyword\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">   NormalViewHolder vh = <span class=\"keyword\">new</span> NormalViewHolder(v);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> vh;</span><br><span class=\"line\">   }</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n   而创建Header View 需要创建它的ViewHoder ,我们需要一些状态来标识是Header View 还是\nNormal View;\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> NORMAL_VIEW = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> HEADER_VIEW = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> FOOTER_VIEW = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">private</span> List&amp;lt;View&amp;gt; headers = <span class=\"keyword\">new</span> ArrayList&amp;lt;&amp;gt;();</span><br><span class=\"line\"><span class=\"keyword\">private</span> List&amp;lt;String&amp;gt; items = <span class=\"keyword\">new</span> ArrayList&amp;lt;&amp;gt;();</span><br><span class=\"line\"><span class=\"keyword\">private</span> List&amp;lt;View&amp;gt; footers = <span class=\"keyword\">new</span> ArrayList&amp;lt;&amp;gt;();</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n通过判断position 和headers items 的size 大小判断 itemtype\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"annotation\">@Override</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getItemViewType</span><span class=\"params\">(<span class=\"keyword\">int</span> position)</span> </span>{</span><br><span class=\"line\">       <span class=\"comment\">//check what type our position is, based on the</span></span><br><span class=\"line\">       <span class=\"comment\">//assumption that the order is headers &amp;gt; items &amp;gt; footers</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span>(position &amp;lt; headers.size()){</span><br><span class=\"line\">\t   <span class=\"keyword\">return</span> TYPE_HEADER;</span><br><span class=\"line\">\t }<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(position &amp;gt;= headers.size() + items.size()){</span><br><span class=\"line\">\t   <span class=\"keyword\">return</span> TYPE_FOOTER;</span><br><span class=\"line\">       }</span><br><span class=\"line\">       <span class=\"keyword\">return</span> TYPE_ITEM;</span><br><span class=\"line\">   }</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n判断来View Type 就可以在onBindViewHolder()中bind itemview\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"annotation\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onBindViewHolder</span><span class=\"params\">(RecyclerView.ViewHolder vh,</span><br><span class=\"line\">  <span class=\"keyword\">int</span> position)</span> </span>{</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (position &amp;lt; headers.size()) {</span><br><span class=\"line\">     View v = headers.get(position);</span><br><span class=\"line\">     <span class=\"comment\">//add our view to a header view and display it</span></span><br><span class=\"line\">     prepareHeaderFooter((HeaderFooterViewHolder) vh, v);</span><br><span class=\"line\">   } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (position &amp;gt;= headers.size() + items.size()) {</span><br><span class=\"line\">     View v = footers.get(position - items.size() - headers.size());</span><br><span class=\"line\">     <span class=\"comment\">//add oru view to a footer view and display it</span></span><br><span class=\"line\">     prepareHeaderFooter((HeaderFooterViewHolder) vh, v);</span><br><span class=\"line\">   } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">     <span class=\"comment\">//it's one of our items, display as required</span></span><br><span class=\"line\">     prepareGeneric((NormalViewHolder) vh, position - headers.size());</span><br><span class=\"line\">   }</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n通过addHeader(View header)向集合headers 中添加item\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addHeader</span><span class=\"params\">(View header)</span> </span>{</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!headers.contains(header)) {</span><br><span class=\"line\">    headers.add(header);</span><br><span class=\"line\">    <span class=\"comment\">//animate</span></span><br><span class=\"line\">    notifyItemInserted(headers.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br></pre></td></tr></table></figure>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> 16</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\"><span class=\"section-number-3\">2.1</span> Android RecyclerView</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n</div><div id=\"outline-container-sec-2-1-1\" class=\"outline-4\">\n<h4 id=\"sec-2-1-1\"><span class=\"section-number-4\">2.1.1</span> Add child view for RecyclerView</h4>\n<div class=\"outline-text-4\" id=\"text-2-1-1\">\n<p>\n首先是List&lt;Interger&gt; mitemType 存储item的类型: 0代表NORMAL VIEW, 1代表CHILD VIEW。\n和List&lt;String&gt; mitems 存储总的数据.\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"> HashMap&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt; items = <span class=\"keyword\">new</span> HashMap&amp;lt;&amp;gt;();</span><br><span class=\"line\"> List&amp;lt;String&amp;gt; item = <span class=\"keyword\">new</span> ArrayList&amp;lt;&amp;gt;();</span><br><span class=\"line\"> item.add(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\"> item.add(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\"> item.add(<span class=\"string\">\"hello\"</span>);</span><br><span class=\"line\"> items.put(<span class=\"string\">\"2001\"</span>, item);</span><br><span class=\"line\"> items.put(<span class=\"string\">\"2002\"</span>, item);</span><br><span class=\"line\"> items.put(<span class=\"string\">\"2003\"</span>, item);</span><br><span class=\"line\"> List&amp;lt;String&amp;gt; mitems = <span class=\"keyword\">new</span> ArrayList&amp;lt;&amp;gt;();</span><br><span class=\"line\"> List&amp;lt;Integer&amp;gt; mitemType = <span class=\"keyword\">new</span> ArrayList&amp;lt;&amp;gt;();</span><br><span class=\"line\">Iterator i = items.keySet().iterator();</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">if</span> (i.hasNext()) {</span><br><span class=\"line\">   String key = (String) i.next();</span><br><span class=\"line\">   mitemType.add(<span class=\"number\">0</span>);</span><br><span class=\"line\">   mitems.add(key);</span><br><span class=\"line\">   List&amp;lt;String&amp;gt; datas = items.get(key);</span><br><span class=\"line\">   <span class=\"keyword\">for</span> (String data : datas) {</span><br><span class=\"line\">     mitems.add(data);</span><br><span class=\"line\">     mitemType.add(<span class=\"number\">1</span>);</span><br><span class=\"line\">   }</span><br><span class=\"line\"> }</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n然后就是和add header 一样, 在getItemType中判断item的类型\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"annotation\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getItemViewType</span><span class=\"params\">(<span class=\"keyword\">int</span> position)</span> </span>{</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (position &amp;lt; headers.size()) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> HEADER_VIEW;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (position &amp;gt;= headers.size() + mitems.size()) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> FOOTER_VIEW;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (mitemType.get(position - headers.size() - footers.size()) == <span class=\"number\">0</span>) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> NORMAL_VIEW;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"keyword\">return</span> CHILD_VIEW;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n</div>\n</div>\n</div>\n</div>\n</div>\n\nLast Updated 2017-02-17 Fri 18:28.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.1.1 (<a href=\"http://orgmode.org\">Org</a> mode 8.2.10)\n"}
